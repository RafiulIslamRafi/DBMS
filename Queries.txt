/////////////////Basic Queries///////////////////////
................................................

select dept_name 
from department
where budget>10000;

select dept_name,budget
from department
where budget>10000;

SELECT dept_name
FROM instructor;


///////distinct/////////
//jsob dep't e instructor ace, sei dep't name gula dekhao.
//ekoi dep't e multiple instructor thakte pare...
SELECT distinct dept_name
FROM instructor;

//just view (with data changed), but main table er data change hoy na. main table change korar jonno update query use korte hobe,ja next e ace..
select ID,salary*1.1
from instructor;

// salary*1.1====salary+salary*10/100;			  
select ID,salary*1.1
from instructor
where salary>50000; 

//string single cotation cara hobe na.
select name
from instructor
where dept_name='CSE';

SELECT course_id
FROM section;





////////////////////////CROSE PRODUCT///////////////////////
............................................................

//merge two table... //but not work for same attribute..

//eitay id select korle kaj kore na. cause, id 2 table eroi same attribute.
select name,salary,dept_name,course_id,semester,year
from instructor,teaches;

//
select name,salary,dept_name,course_id,semester,year
from instructor,teaches
where instructor.ID=teaches.ID;

//jsob department e instructor ace, oi dep't er name, instructor er name, ar j building e ace, sei building er name dekhao..
select name, instructor.dept_name,building
from instructor, department
where instructor.dept_name = department.dept_name;

//as dep't dile new name dekhay...
select name, instructor.dept_name as dept, building 
from instructor, department
where instructor.dept_name = department.dept_name;

//cse dep't er jsob instructor ekoi shathe teacher,tader name and course id dekhao..
select name, course_id
from instructor, teaches
where instructor.id=teaches.id and dept_name='CSE';


////////////////////rename operation: as clause///////////////
................................................................

//Q: find the name of all instructors whose salary is greater than at least one instructor in the cse department. (page: 75)
//boi er solution vull ace, why wrong? find yourself..
select distinct t.name
from instructor as t, instructor as s
where t.salary>s.salary and s.dept_name='CSE' and t.dept_name='CSE';



/////////////////order by///////////////
.........................................................

//ascending sorting with its salary..
select *
from instructor
order by salary;

//descending sorting with its salary.. with desk keyword.
select *
from instructor
order by salary desc;

//salary descending sort hoye jaoyar por, jader salary same, tader name onujayee sort hobe..
select *
from instructor
order by salary desc, name asc;




////////////////////RANGE: (......between ..... and.....)////////////////////////
..................................................

//same to next query.. (without using ......between ....and....)
select name
from instructor
where salary>10000 and salary<50000;

///another way of a range showing....
select name
from instructor
where salary between 10000 and 50000;

//but range na thakle and diyei korte hobe..
select *
from instructor
where dept_name='CSE' and salary> 50000;




//////////////////////Union///////////////////////////
.....................................................

//find the set of all courses taught either fall 2009 or in spring 2010..(80 page.)
(select course_id
from section
where semester='Fall' and year=2009)
union
(select course_id
from section
where semester='Spring' and year=2010);




///////////////////////intersect: is not work in the xampp software..//////////////////////////////////////
//find the set of all courses taught in the fall 2009 as well as in Spring 2010..
(select course_id
from section
where semester='Fall' and year=2009)
intersect
(select course_id
from section
where semester='Spring' and year=2010);




//////////////////////expect: is not work in the xampp software..//////////////////////////// 
//find all courses tought in fall in 2009 semester but not in the spring 2010 semester.
(select course_id
from section
where semester='Fall' and year=2009)
except
(select course_id
from section
where semester='Spring' and year=2010);




///kaj baki ace.... string operation, update, null value, group by(some), having(some)  er..
//update will coming soon.





//////////////////////////Aggregate Function/////////////////////
//////////////avg(), min(), max(), sum(), count()/////////////////
...................................................................

///////////basic aggregate////////////

//Q: Find the average salary of instructors of CSE department. 
//avg(salary) ber hoy shathe eitai attribute name hishebe dekhay.. Ekta ignore er jonno next query.
select avg(salary)
from instructor
where dept_name='CSE';

//same as previous query.. but change the attribute.
select avg(salary) as avg_salary
from instructor
where dept_name='CSE';

//Q: find the total number of instructors who teach a course in the spring 2010 semester.
//inserted table e sob teacheroi instructor. and so,
select count(distinct id)
from teaches
where semester='spring' and year=2010;

//Q: find the average salary of all instructors(86 page).
SELECT avg(salary)
from instructor;



///////////Aggregate with grouping///////////

//Q: Find the average salary in each department(87 page).
//department wise average salary dekhabe..
select dept_name, avg(salary)
from instructor
group by dept_name;

//Q: previous question and jsob dep't er avg salary 70000 er beshi, tader dekhao... group by er jonno having clause use korte hobe. 
//group by er part.........///////////////having//////////
select dept_name, avg(salary)
from instructor
group by dept_name
having avg(salary)>70000;



////////////Aggregate with grouping with having clause////////////





//////////////////////////in/////////////////////
................................................

//jsob course fall 2009 and spring 2010 e porano hoice tader course I'd dekhao.. 
//(another system using in keyword)
Select distinct course_id
	from section
	where semester='Fall' and year=2009 and
	course_id in (Select course_id
		from section
		where semester='Spring' and year=2010);


/////////////////////////not in/////////////////////
................................................

//jsob course fall 2009 e hoice kintu spring 2010 e porano hoi nai tader course I'd dekhao..
//(another system using not in keyword)
Select distinct course_id
	from section
	where semester='Fall' and year=2009 and
	course_id not in (Select course_id
		from section
		where semester='Spring' and year=2010);




////////////////////////////Some complex Query////////////////////////
//update will coming soon.
